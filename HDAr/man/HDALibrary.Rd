% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/HDALibrary.R
\name{HDALibrary}
\alias{HDALibrary}
\alias{rearrangeLibrary}
\alias{listLibraryFiles}
\title{Library File Manipulation}
\usage{
HDALibrary(libraryFile)

rearrangeLibrary(
  libraryFile,
  outputFormat,
  method = c("condense", "replicate"),
  byrow = T
)

listLibraryFiles()
}
\arguments{
\item{libraryFile}{Argument to specify which library file to use.
In the case that this is class \code{character}, this will be matched against the libraries available in this version of the package, which can be listed using \code{listLibraryFiles}.
Should a unique match be found, this library will be retrieved from the internal package data.
Should no unique match be found, \code{libraryFile} will be assumed to represent the file path to a \code{csv} file containing a custom library.
Alternatively, an object of class \code{\link[base]{data.frame}} or \code{\link[S4Vectors]{DataFrame}} can be supplied, from which a library file will be constucted.}

\item{outputFormat}{Length 2 \code{numeric} vector containing the row and columns lengths of the new pinning format.}

\item{method}{The method to be used, either "\code{condense}" or "\code{replicate}".
"\code{condense}" specifies that the library is being condensed into a smaller number of plates.
In this case, the factor by which the library is being condensed must be a factor of the original number of plates.
"\code{replicate}" specifies that technical replicates are being added by repeatedly pinning the library in adjacent positions.}

\item{byrow}{In the case that the library is being condensed, should positions in the new library be filled by row (as opposed to by column)?
Defaults to \code{TRUE}.}
}
\value{
\code{HDALibrary} returns an object of class \code{HDALibrary}.

\code{rearrangeLibrary} returns a new object of class \code{HDALibrary} in the desired pinning format.

\code{listLibraryFiles} returns a vector containing the default libraries available in this package version.
}
\description{
\code{HDALibrary} is a constructor function for objects of class \code{HDALibrary}.
This class is essentially a \code{\link[S4Vectors]{DataFrame}}, but must have five columns which describes the mutant library being used as follows:
\code{library_mutant} should contain the Systematic IDs of the mutants in the library.
\code{replicate} is used to identify and aggregate technical replicates. For this, any rows which have the same value for \code{replicate} will be treated as technical replicates.
In the standard case, this column will be the same as the \code{library_mutant} column, meaning should mutants appear multiple times in the library, they will be treated as technical replicates.
Should this behaviour not be desired, then each time a mutant appears in the library it should be marked with a different value in the \code{replicate} column.
\code{plate}, \code{row} and \code{col} should contain the positional information of each mutant.

\code{rearrangeLibrary} can be used to rearrange an existing library into a new pinning format.

\code{listLibraryFiles} is a function which returns the default libraries available in this package version.
}
\examples{
#Create a new library file from scratch of 1 plate in 96 well format
myHDALibrary <- expand.grid(plate=1L, row=1:8, col=1:12)
myMutants <- paste("mutant", 1:96, sep="_")
myHDALibrary <- DataFrame(library_mutant=myMutants, replicate=myMutants, myHDALibrary)
myHDALibrary <- HDALibrary(myHDALibrary)

#Create a library file by reading from a csv
myHDALibrary <- system.file("extdata", "HDALibrary_example.csv", package="HDAr")
myHDALibrary <- HDALibrary(myHDALibrary)

#List the available library files
availableLibraries <- listLibraryFiles()

Get the Fission Yeast Bioneer V5 96 Well Format Library
myHDALibrary <- HDALibrary("Fission_Yeast-Bioneer_V5-96_Well_Format")

#Convert into 384 Well Format by condesing from 36 plates to 9 plates
myHDALibrary <- rearrangeLibrary(myHDALibrary, c(16, 24), "condense")

#Convert into 1536 (quadruplicate) Well Format by replicating
myHDALibrary <- rearrangeLibrary(myHDALibrary, c(32, 48), "replicate")
}
\seealso{
\code{\link{libraryFile}}
}

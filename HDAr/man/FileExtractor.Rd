% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FileExtractor.R
\docType{class}
\name{FileExtractor}
\alias{FileExtractor}
\alias{FileExtractor-class}
\alias{createFileList}
\title{Specification of directory structure and identification of files}
\usage{
FileExtractor(
  regularExpression = "(.*)/(.*)\\\\.jpg\\\\.dat",
  capturingGroups = c("sample", "plate")
)

createFileList(
  directory = getwd(),
  FileExtractor = FileExtractor(),
  samples2exclude,
  plates2exclude,
  verbose = T
)
}
\arguments{
\item{regularExpression}{Character vector of length 1.
This should be a \code{\link[base]{regular expression}} representing relative file paths of the output files of image analysis softwares.
This serves two purposes. First, to identify the files which should be analysed.
Secondly, the regular expression must indicate which parts of the file paths contain information on sample identity and plate number.
This is done using capturing groups - i.e. '(...)'. See \code{\link[stringr]{str_match}}.
Therefore, there must be two capturing groups in the regular expression - one to extract the sample, and one to extract the plate.}

\item{capturingGroups}{Character vector of length 2, containing the strings \code{'sample'} and \code{'plate'}.
The order indicates which of the capturing groups indicates the sample, and which of the capturing groups indicates the plate.}

\item{directory}{Directory within which to search for files. Defaults to the current working directory.}

\item{FileExtractor}{An object of class \code{FileExtractor} which specifies the strucutre of the sub directories and file names.}

\item{samples2exclude}{Optional vector specifying any samples to not include in the list.}

\item{plates2exclude}{Optional vector specifying any plates to not include in the list.}

\item{verbose}{Logical. Should details of the files identified be printed. Defaults to \code{TRUE}.}
}
\value{
\code{FileExtractor} returns an object of class \code{FileExtractor}.

\code{createFileList} returns a \code{\link[S4Vectors]{SimpleList}}. Each element of the list contains a character vector of the files which correspond to a particular sample, with names of each element of the list representing the sample names.
}
\description{
\code{FileExtractor} creates an object which represents the location and arrangement of files in a directory.
The default assumes the files for each sample are located in their own folder (with the folder names representing the sample names), and the file names consisting of a plate identified followed by the file extnsion '\code{.jpg.dat}' (i.e. \code{\link[gitter]{gitter}} output files).

\code{createFileList} identifies all files in a directory which are matched by the specified \code{fileExtractor}.
In addition, numeric elements in the file names are identified and the files are ordered based on this in order to ensure that each plate is correctly mapped the mutants in the library.
}
\examples{
#Create a FileExtractor to identify files with the extension '.jpg.txt', where the files for each sample are contained within their own folder.
myFileExtractor <- FileExtractor(regularExpression="(.*)/(.*)\\.jpg\\.txt")

#Get the path of a directory to be analysed
myDirectory <- system.file("extdata", "SGA_data", package="HDAr")

#Show all files in the directory
list.files(myDirectory, recursive=TRUE)

#Create a SimpleList containing all files which are matched by myFileExtractor in the specified directory.
myFileList <- createFileList(myDirectory, myFileExtractor)

#Create a SimpleList containing all files which are matched by myFileExtractor in the specified directory, but excluding the last plate named 'plates_33-36.jpg.txt'.
myFileList <- createFileList(myDirectory, myFileExtractor, plates2exclude="plates_33-36")
}
